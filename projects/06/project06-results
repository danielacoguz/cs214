Script started on 2022-03-17 23:44:27-04:00 [TERM="xterm-256color" TTY="/dev/pts/20" COLUMNS="80" LINES="24"]
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ exit[Kcat QuadraticRoots.java
/* subprograms.java is a driver for method arg().
 *
 * Started by: Daniela Contreras ldc6 at Calvin College
 *
 * Date:03/05/2022
 *
 * Precondition: arg has double values passed.
 * Output: the squareroot of the double values
*/ 
import java.lang.Math;
import java.util.Scanner; 

public class QuadraticRoots{

    public static double root1;

    public static double root2;


    public static void main(final String[] args){

        double a, b, c;
        final Scanner keyboard = new Scanner(System.in);
        System.out.println("To display the Quadratic Root");

        System.out.println("enter a value for a: ");
        a = keyboard.nextDouble();

        System.out.println("enter a value for b: ");
        b = keyboard.nextDouble();

        System.out.println("enter a value for c: ");
        c = keyboard.nextDouble();

        if(Calculations(a,b,c)){

            System.out.println("The roots are " + root1 + " and " + root2 + "\n");
        keyboard.close();
        }

    }

    public static boolean Calculations(double a, double b, double c){
        if (a != 0){
            double arg = (Math.pow(b, 2.0) -( 4 * a * c));
                if (arg >= 0){
                    root1 = (-b + Math.sqrt(arg)) / (2*a);
                    root2 = (-b - Math.sqrt(arg)) / (2*a);
                    return true;
                
                }else {
                    System.out.println("\n QuadraticRoots(): b^2 - 4ac is negative!");
                    root1 = root2 = 0.0;
                    return false;
                }
        } else {
            System.out.println("QuadraticRoots(): a is a zero!");
            root1 = root2 = 0.0;
            return false;
        }
    }  
}





]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ javac -deprecation QuadraticRoots.java
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ java QUadraticRoots
Error: Could not find or load main class QUadraticRoots
Caused by: java.lang.ClassNotFoundException: QUadraticRoots
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ java Quadra           java QUadraticRootsc -deprecation QuadraticRoots.java[15Pcat QuadraticRoots.javaexit[K./mainrootscat mainroots.adb                 script script.java
Script started, file is script.java
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ cat QuadraticRoots.java
/* subprograms.java is a driver for method arg().
 *
 * Started by: Daniela Contreras ldc6 at Calvin College
 *
 * Date:03/05/2022
 *
 * Precondition: arg has double values passed.
 * Output: the squareroot of the double values
*/ 
import java.lang.Math;
import java.util.Scanner; 

public class QuadraticRoots{

    public static double root1;

    public static double root2;


    public static void main(final String[] args){

        double a, b, c;
        final Scanner keyboard = new Scanner(System.in);
        System.out.println("To display the Quadratic Root");

        System.out.println("enter a value for a: ");
        a = keyboard.nextDouble();

        System.out.println("enter a value for b: ");
        b = keyboard.nextDouble();

        System.out.println("enter a value for c: ");
        c = keyboard.nextDouble();

        if(Calculations(a,b,c)){

            System.out.println("The roots are " + root1 + " and " + root2 + "\n");
        keyboard.close();
        }

    }

    public static boolean Calculations(double a, double b, double c){
        if (a != 0){
            double arg = (Math.pow(b, 2.0) -( 4 * a * c));
                if (arg >= 0){
                    root1 = (-b + Math.sqrt(arg)) / (2*a);
                    root2 = (-b - Math.sqrt(arg)) / (2*a);
                    return true;
                
                }else {
                    System.out.println("\n QuadraticRoots(): b^2 - 4ac is negative!");
                    root1 = root2 = 0.0;
                    return false;
                }
        } else {
            System.out.println("QuadraticRoots(): a is a zero!");
            root1 = root2 = 0.0;
            return false;
        }
    }  
}





]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ javac -deprecation QuadraticRoots.java
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ java QuadraticRoots
To display the Quadratic Root
enter a value for a: 
3
enter a value for b: 
8
enter a value for c: 
2
The roots are -0.2792407799438735 and -2.3874258867227933

]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ java QuadraticRoots
To display the Quadratic Root
enter a value for a: 
0
enter a value for b: 
3
enter a value for c: 
5
QuadraticRoots(): a is a zero!
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ java QuadraticRoots
To display the Quadratic Root
enter a value for a: 
2
enter a value for b: 
1
enter a value for c: 
8

 QuadraticRoots(): b^2 - 4ac is negative!
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ java QuadraticRoots
To display the Quadratic Root
enter a value for a: 
1
enter a value for b: 
9
enter a value for c: 
10
The roots are -1.2984378812835757 and -7.701562118716424

]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ exit
exit
Script done, file is script.java
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ exit

Script done on 2022-03-18 00:01:53-04:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-17 22:11:08-04:00 [TERM="xterm-256color" TTY="/dev/pts/19" COLUMNS="80" LINES="24"]
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ cat quadraticformula.rb
##############################################################################################################
##quadraticformula.rb calculates the roots of a quadratic equation
##pre-condition: a!=0 and inside of the roor (b^2-4ac) cannot be negative
##Output: root1 and root2
##Name: Daniela Contreras
##Date: March 06 2022
##############################################################################################################
#function QuadraticFormula()
#taking in parameters: a, b, c
#returning a vector with roots of equation
####################################################
def quadraticformula (a, b, c)

    if a!= 0.0 then
        arg = b**2 - 4 * a * c ##function inside square root is arg
        if arg >= 0.0 then # stating we must not ge5t a negative arg
            root1 = (-b + Math.sqrt(arg))/(2*a) #1st root adding squareroot
            root2 = (-b - Math.sqrt(arg))/(2*a) #2nd root subrtracting squaroot
        else
            root1 = root2 = 0.0
            puts "\t Quadratic Roots are negative!"
        end
        
    else
        root1 = root2 = 0.0
        puts "\n a is a zero!"
    end
    [root1, root2]
end
######################################################################
## main fucntion outputting values
## receives a, b and c from user
## outputs roots
## helped by germaine Hounakey on lines 39- 50
#######################################################################
def main
    puts "To obtain Quadratic formula roots enter coefficient values"

    print "\ta =  "
    a = gets.to_f

    print"\tb =  "
    b = gets.to_f

    print"\tc =  "
    c = gets.to_f

    roots = quadraticformula(a, b, c)

    if roots[0] != 0.0 and roots[1] != 0.0 then
        puts "First root is equal to: " <<roots[0].to_s
        puts "\n The second root is equal to: " <<roots[1].to_s
    end
end
    main


            
    ]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ cat quadraticformula.rb[2Pruby quadraticformulacd 06[KProjects/06[Kruby quadraticformula.rb
To obtain Quadratic formula roots enter coefficient values
	a =  0
	b =  4
	c =  3

 a is a zero!
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ruby quadraticformula.rb
To obtain Quadratic formula roots enter coefficient values
	a =  1
	b =  9
	c =  10
First root is equal to: -1.2984378812835757

 The second root is equal to: -7.701562118716424
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ruby quadraticformula.rb
To obtain Quadratic formula roots enter coefficient values
	a =  1 3
	b =  9
	c =  4
First root is equal to: -0.5425728922436619

 The second root is equal to: -2.457427107756338
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ruby quadraticformula.rb
To obtain Quadratic formula roots enter coefficient values
	a =  6
	b =  7 2
	c =  7
	 Quadratic Roots are negative!
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ exit
exit

Script done on 2022-03-17 22:13:16-04:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-17 23:40:23-04:00 [TERM="xterm-256color" TTY="/dev/pts/19" COLUMNS="80" LINES="24"]
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ cat mair nroots.adb
------------------------------------------------------------------
-- quadraticroots.adb computers the quadratic formula roots
--input: a, b ,c, arg, true_false
--output: root1, root2
--Name: Daniela Contreras
--Date: March 2022
--Helped/Worked with Germaine Hounakey
-------------------------------------------------------------------
with Ada.Text_IO, Ada.Float_Text_IO, Ada.Strings.Fixed, Ada.Numerics.Elementary_Functions;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Strings.Fixed, Ada.Numerics.Elementary_Functions;

procedure mainroots is
    a, b, c, root1, root2, arg : Float;
    true_false : boolean;
-------------------------------------------------------------------
-- quadraticFormula() computes roots of quadratic equation given coefficients
-- inputs: float type a, b, c, 
-- return: root1 root2
-------------------------------------------------------------------
procedure quadraticFormula(a, b, c : in Float; root1, root2, arg: out Float; true_false: out Boolean) is
begin

if a /= 0.0 then 
        arg := b**2 - 4.0 * a * c;
    if arg >= 0.0 then
        root1 := (-b + Sqrt(arg))/ (2.0 * a);
        root2 := (-b - Sqrt(arg))/ (2.0 * a);
        true_false := true;
    else
        root1 := 0.0;
        root2 := 0.0;
        true_false := false;

        Put_Line("");
        Put_Line("b^2 -4ac is not greater than or equal 0; negative!");
        Put_Line("");
    end if;
else
    root1 := 0.0;
    root2 := 0.0;
    true_false := false;
    Put_Line("");
    Put_Line("");
    Put_Line("a is zero!");
end if;
end quadraticFormula;

begin 

    Put_Line("Enter desired value for a, b, c");

    Put("a = ");
    Get(a);

    Put("b = ");
    Get(b);

    Put("c = ");
    Get(c);

---Germaine Hounakey helped me implement this function
quadraticFormula( a, b, c, root1, root2, arg, true_false);
if true_false = true then
    Put_Line("");
    Put("the first root is: ");

    Put(root1);
    Put_Line(""); --gives space
-----for second root-----   
    Put_Line("");
    Put("the first root is: ");

    Put(root2);

    Put_Line("");

end if;

end mainroots;

    


    




]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ cat mainroots.adbscript script.rubyruby quadraticformula.rbcd 06[KProjects/[4Pcs214Projects/06[Kruby quadraticformula.rb[6Pscript script.ruby[1Pcat mainroots.adb[Kcat mainroots.adbscript script.rubyruby quadraticformula.rbcd 06[KProjects/[4Pcs214[4Pexitruby quadraticformula.rb[1Pcat quadraticformula.rb[2Pruby quadraticformulacd 06[KProjects/            ./mainroots
Enter desired value for a, b, c
a = 1
b = 9
c = 10

the first root is: -1.29844E+00

the first root is: -7.70156E+00
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ./mainroots
Enter desired value for a, b, c
a = 0
b = 4
c = 2


a is zero!
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ./mainroots
Enter desired value for a, b, c
a = 2
b = 7
c = 2

the first root is: -3.13859E-01

the first root is: -3.18614E+00
]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ./mainroots
Enter desired value for a, b, c
a = 5
b = 2
c = 6

b^2 -4ac is not greater than or equal 0; negative!

]0;ldc6@remotel1: ~/cs214/Projects/06[01;32mldc6@remotel1[00m:[01;34m~/cs214/Projects/06[00m$ ei xit
exit

Script done on 2022-03-17 23:41:41-04:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-03-18 18:43:37-04:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="80" LINES="24"]
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ cat roots.clj
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; roots.clj computes root1 and root2 of quadratic formula
;;;input: a, b ,c coefficients for formula
;;output: root1, root2, zero, or a is negative if it applies
;;Name: Daniela Contreras
;;Date: March 2022
;;Helped/Worked with Germaine Hounakey
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(ns roots) 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Roots() does the computation/calculation part of the quadratic formula
;;inputs: a, b, c, double types
;;outputs: roots 1 & 2, text saying invalid and reasoning
;;reasoning to be invalid: a is zero or root is negative
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn roots [a b c]
    (if (= a 0) (print "\ta is zero!\n"))
    (if (not= a 0)
        (let [arg (- (* b b) (* (* 4 a) c))]
        (if (< arg 0) (print "can't be square rooted since b^2 -4ac is negative\n"))
            (if (>= arg 0)
                (let [
                root1 (/ (+ (* b -1)(Math/sqrt arg)) (* 2 a))
                root2 (/ (- (* b -1)(Math/sqrt arg)) (* 2 a))
                ]
                (vector root1 root2)
                )
            )
        )
    )
)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;main function
;;input: have user input desired values for a b and c
;;output: both roots or invalid texts/messages
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main[]
    (print "To obtain roots of quadratic function we must enter value of variables: ") (flush)
   
    (print "\n\ta = ") (flush)
    (let [ a (read) ]
        (print "\tb = ") (flush)
        (let [ b (read) ] 
            (print "\tc = ") (flush)
                (let [c (read) ] 
                (let
                    [
                        list (roots a b c)
                        root1 (get list 0)
                        root2 (get list 1)
                    ]
                    (if (and (not= root1 nil) (not= root2 nil))
                        (print "\n the first root is: " root1
                        "\t the second root is : " root2 "\n"
                        )
                        (print "")
                    )

                )
            )
        )
    )
)]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clou jure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 2
	b = 5
	c = 1

 the first root is:  -0.21922359359558485 	 the second root is :  -2.2807764064044154 
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 0
	b = 3
	c = 2
	a is zero!
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 1
	b = 1
	c = 5
can't be square rooted since b^2 -4ac is negative
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 4
	b = 34
	c = 6

 the first root is:  -0.18029485097507347 	 the second root is :  -8.319705149024927 
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 5 1
	b = 9
	c = 10

 the first root is:  -1.2984378812835757 	 the second root is :  -7.701562118716424 
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ exit
exit

Script done on 2022-03-18 18:44:59-04:00 [COMMAND_EXIT_CODE="0"]
         (if (and (not= root1 nil) (not= root2 nil))
                        (print "\n the first root is: " root1
                        "\t the second root is : " root2 "\n"
                        )
                        (print "")
                    )

                )
            )
        )
    )
)]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clou jure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 2
	b = 5
	c = 1

 the first root is:  -0.21922359359558485 	 the second root is :  -2.2807764064044154 
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 0
	b = 3
	c = 2
	a is zero!
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 1
	b = 1
	c = 5
can't be square rooted since b^2 -4ac is negative
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 4
	b = 34
	c = 6

 the first root is:  -0.18029485097507347 	 the second root is :  -8.319705149024927 
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ clojure -m roots
To obtain roots of quadratic function we must enter value of variables: 
	a = 5 1
	b = 9
	c = 10

 the first root is:  -1.2984378812835757 	 the second root is :  -7.701562118716424 
]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00m:[01;34m~/cs214/Projects/06[00m$ [K]0;ldc6@gold23: ~/cs214/Projects/06[01;32mldc6@gold23[00