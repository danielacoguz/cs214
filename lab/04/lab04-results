Script started on 2022-02-04 23:41:46-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="154" LINES="12"]
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ cat o[KLog [KTable.java
/* LogTable.java displays a table of logarithms.
 *
 * Input: start, stop and increment, three doubles.
 * PRE: start < stop && increment > 0.
 * Output: A table of logarithms from start to stop,
 *         with increment as the step value.
 * Begun by: Nelesen, for CS 214 at Calvin College.
 * Completed by: Daniela Contreras ldc6
 ********************************************************/
import java.util.Scanner; 		// Get input

class LogTable{

  public static void main(String[] args){
    Scanner keyboard = new Scanner(System.in);
    System.out.println("To display a table of logarithms,");
    System.out.println("enter the start, stop and increment values: ");
    double start, stop, increment;
    start = keyboard.nextDouble();
    stop = keyboard.nextDouble();
    increment = keyboard.nextDouble();

  
     while(start <= stop){
       // loops until the start isn't greater than desired stop
       System.out.println("the log of " + start +  " is " + Math.log10(start));
       // printout out to the user the log
       start = start +  increment; // incrementation equation
     }
   }
}

]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ javac -deprecation LogTable.java
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ java LogTable
To display a table of logarithms,
enter the start, stop and increment values: 
20  1
10
0.5
the log of 1.0 is 0.0
the log of 1.5 is 0.17609125905568124
the log of 2.0 is 0.3010299956639812
the log of 2.5 is 0.3979400086720376
the log of 3.0 is 0.47712125471966244
the log of 3.5 is 0.5440680443502757
the log of 4.0 is 0.6020599913279624
the log of 4.5 is 0.6532125137753437
the log of 5.0 is 0.6989700043360189
the log of 5.5 is 0.7403626894942439
the log of 6.0 is 0.7781512503836436
the log of 6.5 is 0.8129133566428556
the log of 7.0 is 0.8450980400142568
the log of 7.5 is 0.8750612633917001
the log of 8.0 is 0.9030899869919435
the log of 8.5 is 0.9294189257142927
the log of 9.0 is 0.9542425094393249
the log of 9.5 is 0.9777236052888477
the log of 10.0 is 1.0
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ java LogTable
To display a table of logarithms,
enter the start, stop and increment values: 
1
20
2
the log of 1.0 is 0.0
the log of 3.0 is 0.47712125471966244
the log of 5.0 is 0.6989700043360189
the log of 7.0 is 0.8450980400142568
the log of 9.0 is 0.9542425094393249
the log of 11.0 is 1.0413926851582251
the log of 13.0 is 1.1139433523068367
the log of 15.0 is 1.1760912590556813
the log of 17.0 is 1.2304489213782739
the log of 19.0 is 1.2787536009528289
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ exit
exit

Script done on 2022-02-04 23:43:33-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-02-04 23:44:04-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="154" LINES="12"]
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ cat log_table.adb
-- log_table.adb computes a table of logarithms.
--
-- Input: start, stop, increment, three reals.
-- Precondition: increment is positive.
-- Output: A table of logarithms beginning with log(start),
--         ending with log(stop), with intervals of increment.
--
-- Begun by: Prof. Adams, for CS 214 at Calvin College.
-- Completed by: Daniela Contreras ldc6
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;

procedure log_table is

   Start, Stop, Increment : Float;

begin                                           -- Prompt for input
   Put_Line("To print a table of logarithms,");
   Put(" enter the start, stop, and increment values: ");
   Get(Start); Get(Stop); Get(Increment);

   loop
      exit when  (Start > Stop); -- condition we are testing. Telling it to stop if Start > Stop

      Put( "the log of");
      Put (Start);
      Put ("is" );
      Put(log(Start, 10.0) ); -- math log10() for Ada
      New_Line;
      Start := Start + Increment; -- takes the value of the incrementation plus the start number
   end loop; -- terminates loop


end log_table;

]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ gnatmake log_table
gnatmake: "log_table" up to date.
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ gcc -c lg[Kog_table
[01m[Kgcc:[m[K [01;35m[Kwarning: [m[Klog_table: linker input file unused because linking not done
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ ./log_table
To print a table of logarithms,
 enter the start, stop, and increment values: 1
10
0.5
the log of 1.00000E+00is 0.00000E+00
the log of 1.50000E+00is 1.76091E-01
the log of 2.00000E+00is 3.01030E-01
the log of 2.50000E+00is 3.97940E-01
the log of 3.00000E+00is 4.77121E-01
the log of 3.50000E+00is 5.44068E-01
the log of 4.00000E+00is 6.02060E-01
the log of 4.50000E+00is 6.53212E-01
the log of 5.00000E+00is 6.98970E-01
the log of 5.50000E+00is 7.40363E-01
the log of 6.00000E+00is 7.78151E-01
the log of 6.50000E+00is 8.12913E-01
the log of 7.00000E+00is 8.45098E-01
the log of 7.50000E+00is 8.75061E-01
the log of 8.00000E+00is 9.03090E-01
the log of 8.50000E+00is 9.29419E-01
the log of 9.00000E+00is 9.54243E-01
the log of 9.50000E+00is 9.77724E-01
the log of 1.00000E+01is 1.00000E+00
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ ./log_table
To print a table of logarithms,
 enter the start, stop, and increment values: 1
20
2
the log of 1.00000E+00is 0.00000E+00
the log of 3.00000E+00is 4.77121E-01
the log of 5.00000E+00is 6.98970E-01
the log of 7.00000E+00is 8.45098E-01
the log of 9.00000E+00is 9.54243E-01
the log of 1.10000E+01is 1.04139E+00
the log of 1.30000E+01is 1.11394E+00
the log of 1.50000E+01is 1.17609E+00
the log of 1.70000E+01is 1.23045E+00
the log of 1.90000E+01is 1.27875E+00
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ exit
exit

Script done on 2022-02-04 23:46:20-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-02-04 23:58:11-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="154" LINES="12"]
]0;ldc6@remotel3: ~/cs214/Labs/04/Clojure/src[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04/Clojure/src[00m$ exit[Kexitclojure -m logTable[3Pat logTable.clj
;;;; logTable.clj displays a table of logarithms.
;;;;
;;;; Input: start, stop and increment, three numbers.
;;;; Precondition: start < stop && increment > 0.
;;;; Output: A table of logarithms from start to stop,
;;;;          with interval of increment.
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by: Daniela Contreras
;;;; Date: 02/04/22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns logTable)                                 ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; displayLogTable() recursively generates the log-table.
;;; Receive: start the first value for the table;
;;;          stop, the last  value for the table;
;;;           step, the step value for the table;
;;; Precondition: start < stop && increment > 0.
;;; Output: The table of logs from start to stop, by step.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; direct-recursive version
;; Pure Recursive
(defn displayLogTable [start, stop, increment] ;;arguments inside function
  (if (<= start stop) ;;if loop starting
    (do ;;tells if statement what to do
    ;; prints text out 
    ;; but also the \n is necessary to include all other results
      (printf "log of %f is %f\n" start (Math/log10 start)) 

      (displayLogTable (+ start increment) stop increment)
    )
  )
)
;;Using Loop recursion
;; loop (indirect-recursion) version
(defn displayLogTable2 [start stop step]
  (loop [i start]                           ; set i to start
    (when (<= i stop)                       ; if i <= stop:
      (printf "The logarithm of %f is %f\n" ;  print one line
                  i (Math/log10 i)
      )
      (recur (+ i step))                    ; recurse, i += step
    )
  )
)
;; indirect/tail-recursive version (just using recur)
(defn displayLogTable3 [start stop step]
  (if (<= start stop)                     ; if start <= stop:
    (do                                      ; do these two things:
      (printf "The logarithm of %f is %f\n"  ; - print one line
                  start (Math/log10 start)
      )
      (recur (+ start step) stop step)       ; - recurse, start+=step
    )
  )
)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; -main is a 'driver' for the displayLogTable() functions.
;;; Input: start, stop and increment.
;;; Output: The table of logarithms 
;;;          from start to stop by increment
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn -main []
 (println "To display a table of logarithms,")
 (print " enter the start, stop, and increment values: ") (flush)
 (let
    [ start (double (read))
      stop (double (read))
      increment (double (read))
    ] 
    (println)
    (displayLogTable start stop increment) 
    (println)
    (displayLogTable2 start stop increment) 
    (println)
    (displayLogTable3 start stop increment) 
    (println)
 )
)

]0;ldc6@remotel3: ~/cs214/Labs/04/Clojure/src[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04/Clojure/src[00m$ cat logTable.cljexit[Kcat logTable.cljexit[Kclojure -m logTable
To display a table of logarithms,
 enter the start, stop, and increment values: 1
10
0.5

log of 1.000000 is 0.000000
log of 1.500000 is 0.176091
log of 2.000000 is 0.301030
log of 2.500000 is 0.397940
log of 3.000000 is 0.477121
log of 3.500000 is 0.544068
log of 4.000000 is 0.602060
log of 4.500000 is 0.653213
log of 5.000000 is 0.698970
log of 5.500000 is 0.740363
log of 6.000000 is 0.778151
log of 6.500000 is 0.812913
log of 7.000000 is 0.845098
log of 7.500000 is 0.875061
log of 8.000000 is 0.903090
log of 8.500000 is 0.929419
log of 9.000000 is 0.954243
log of 9.500000 is 0.977724
log of 10.000000 is 1.000000

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030
The logarithm of 2.500000 is 0.397940
The logarithm of 3.000000 is 0.477121
The logarithm of 3.500000 is 0.544068
The logarithm of 4.000000 is 0.602060
The logarithm of 4.500000 is 0.653213
The logarithm of 5.000000 is 0.698970
The logarithm of 5.500000 is 0.740363
The logarithm of 6.000000 is 0.778151
The logarithm of 6.500000 is 0.812913
The logarithm of 7.000000 is 0.845098
The logarithm of 7.500000 is 0.875061
The logarithm of 8.000000 is 0.903090
The logarithm of 8.500000 is 0.929419
The logarithm of 9.000000 is 0.954243
The logarithm of 9.500000 is 0.977724
The logarithm of 10.000000 is 1.000000

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030
The logarithm of 2.500000 is 0.397940
The logarithm of 3.000000 is 0.477121
The logarithm of 3.500000 is 0.544068
The logarithm of 4.000000 is 0.602060
The logarithm of 4.500000 is 0.653213
The logarithm of 5.000000 is 0.698970
The logarithm of 5.500000 is 0.740363
The logarithm of 6.000000 is 0.778151
The logarithm of 6.500000 is 0.812913
The logarithm of 7.000000 is 0.845098
The logarithm of 7.500000 is 0.875061
The logarithm of 8.000000 is 0.903090
The logarithm of 8.500000 is 0.929419
The logarithm of 9.000000 is 0.954243
The logarithm of 9.500000 is 0.977724
The logarithm of 10.000000 is 1.000000

]0;ldc6@remotel3: ~/cs214/Labs/04/Clojure/src[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04/Clojure/src[00m$ exit
exit

Script done on 2022-02-04 23:58:47-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-02-04 23:50:47-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="154" LINES="12"]
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ cat logTable.rb
#! /usr/bin/ruby
# logTable.rb displays a table of logarithms
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: Daniela Contreras ldc6
#
# Input:  The start, stop and increment values
# Precondition: The start value is less than the stop value, 
#     and the increment is greater than 0
# Output: A table of logarithms from start to stop, with increment
#     as the step value


   

if __FILE__ == $0
   print "Enter the start value: "
####below code -> GET THESE VALUES AS NUMBERS
   start = gets.chomp.to_f ###initializing variable Start
   print "Enter the stop value: "
   stop = gets.chomp.to_f  ###initializing variable Start
####
   print "Enter the increment value: "
   increment = gets.chomp.to_f   ###initializing variable Start
   while start <= stop ##statement having initialzing value be < end value
      puts ("the log of  + #{start} is #{Math.log10(start)}") ##takes log of 10 for values
      start = start + increment ## does the actual incrementation from starting value
   end
   
end

]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ ruby logTable.rb
Enter the start value: 1
Enter the stop value: 10  10
Enter the increment value: 0.5
the log of  + 1.0 is 0.0
the log of  + 1.5 is 0.17609125905568124
the log of  + 2.0 is 0.3010299956639812
the log of  + 2.5 is 0.3979400086720376
the log of  + 3.0 is 0.47712125471966244
the log of  + 3.5 is 0.5440680443502757
the log of  + 4.0 is 0.6020599913279624
the log of  + 4.5 is 0.6532125137753437
the log of  + 5.0 is 0.6989700043360189
the log of  + 5.5 is 0.7403626894942439
the log of  + 6.0 is 0.7781512503836436
the log of  + 6.5 is 0.8129133566428556
the log of  + 7.0 is 0.8450980400142568
the log of  + 7.5 is 0.8750612633917001
the log of  + 8.0 is 0.9030899869919435
the log of  + 8.5 is 0.9294189257142927
the log of  + 9.0 is 0.9542425094393249
the log of  + 9.5 is 0.9777236052888477
the log of  + 10.0 is 1.0
]0;ldc6@remotel3: ~/cs214/Labs/04[01;32mldc6@remotel3[00m:[01;34m~/cs214/Labs/04[00m$ exit
exit

Script done on 2022-02-04 23:52:43-05:00 [COMMAND_EXIT_CODE="0"]
